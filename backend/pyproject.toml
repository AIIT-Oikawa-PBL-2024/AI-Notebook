[tool.poetry]
name = "backend"
version = "0.1.0"
description = ""
authors = ["Your Name <you@example.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.11"
fastapi = "0.115.2"
uvicorn = {extras = ["standard"], version = "^0.29.0"}
python-multipart = "^0.0.9"
aiofiles = "^23.2.1"
sqlalchemy = "^2.0.29"
pymysql = "^1.1.1"
aiomysql = "^0.2.0"
cryptography = "^43.0.1"
mysql-connector-python = "^9.1.0"
google-cloud-storage = "^2.16.0"
alembic = "^1.13.1"
sqlalchemy-utils = "^0.41.2"
python-dotenv = "^1.0.1"
google-cloud-aiplatform = "^1.53.0"
anthropic = {extras = ["vertex"], version = "^0.30.1"}
pymupdf = "^1.24.7"
sphinx = "^7.4.6"
sphinx-rtd-theme = "^2.0.0"
myst-parser = "^3.0.1"
firebase-admin = "^6.5.0"
starlette = "0.40.0"
ffmpeg-python = "^0.2.0"
hypercorn = "^0.17.3"


[tool.poetry.group.dev.dependencies]
pytest-asyncio = "^0.23.6"
httpx = "^0.27.0"
pytest-cov = "^5.0.0"
coverage = "^7.5.0"
ruff = "^0.4.3"
mypy = "^1.10.0"


[tool.ruff]
exclude = [
    ".ruff_cache"
]
line-length = 88
indent-width = 4
target-version = "py311"

[tool.ruff.lint]
select = [
    "F", # Flake8
    "B", # Black    
    "E", # error
    "W", # warning
    "I", # isort
  "D414", # pydocstyle
]
ignore = []
fixable = ["ALL"]

[tool.ruff.lint.per-file-ignores]
"!app/**.py" = ["F", "B", "E", "W", "I"]
"app/db" = ["F", "B", "E", "W", "I"]
"__init__.py" = ["F", "B", "E", "W", "I"]


[tool.mypy]
python_version = "3.11"
disallow_untyped_defs = true
ignore_missing_imports = true


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
